{"ast":null,"code":"var _jsxFileName = \"/home/faique/geektrust/Geek/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport EditModal from \"./EditModal\";\nimport { Spinner } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resP: [],\n      resResult: [],\n      errMessage: [],\n      searchTerm: \"\",\n      currentPage: 0,\n      filerRes: [],\n      checkedList: [],\n      currentID: null,\n      email: \"\",\n      role: \"\",\n      name: \"\",\n      modal: false,\n      selectAll: false,\n      updated: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleSelectAll = this.handleSelectAll.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleRole = this.handleRole.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const url = \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\n    axios.get(url).then(response => {\n      this.setState({\n        resResult: response.data.map(a => {\n          return { ...a,\n            isChecked: false\n          };\n        })\n      }, () => {\n        localStorage.setItem(\"resLoc\", this.state.resResult);\n        this.setState({\n          resP: this.state.resResult\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        errMessage: error.message\n      });\n    });\n  }\n\n  search(rows) {\n    return rows.filter(row => row.name.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) > -1 || row.email.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) > -1 || row.id.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) > -1 || row.role.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) > -1);\n  }\n\n  showLoading() {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      className: \"loading\",\n      size: \"\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      resResult: this.state.resP\n    });\n    this.setState({\n      searchTerm: event.target.value\n    }, () => {\n      let tfile = this.search(this.state.resResult);\n      this.setState({\n        resResult: tfile\n      });\n    });\n  }\n\n  handleCheck(item, e) {\n    console.log(\"this\", e.target.name);\n    let currid = this.state.resResult.findIndex(element => element.id === item.id);\n    let newArray = [...this.state.resResult];\n    newArray[currid] = { ...newArray[currid],\n      isChecked: !newArray[currid].isChecked\n    };\n    this.setState({\n      resResult: newArray\n    });\n    this.setState({\n      checkedList: [...this.state.checkedList, item.id]\n    });\n\n    if (e.target.checked) {\n      //true append id to checklist\n      if (this.state.checkedList.indexOf(this.state.checkedList[item]) === -1) {\n        this.setState({\n          checkedList: [...this.state.checkedList, item.id]\n        });\n      }\n    } else {\n      this.setState({\n        checkedList: this.state.checkedList.filter(c_item => {\n          return c_item !== item.id;\n        })\n      });\n    }\n  }\n\n  handleSelectAll(e, checkedList, currentPage) {\n    this.setState({\n      selectAll: !this.state.selectAll\n    }, () => {\n      if (this.state.selectAll === false) {\n        this.setState({\n          checkedList: []\n        });\n      }\n    });\n    let start = currentPage * 10;\n    let end = 0;\n    this.state.resResult.length < 10 ? end = this.state.resResult.length : end = start + 10;\n    let newArray = [...this.state.resResult];\n    this.state.resResult.slice(start, end).map((item, index) => {\n      newArray[item.id - 1] = { ...newArray[item.id - 1],\n        isChecked: !item.isChecked\n      };\n      this.setState(prevState => ({\n        checkedList: [...prevState.checkedList, item.id]\n      }));\n    });\n    this.setState({\n      resResult: newArray\n    });\n  }\n\n  listofAllButtons() {\n    let pageNumber = [];\n\n    for (let i = 0; i < this.state.resResult.length / 10; i++) {\n      pageNumber.push(i);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          display: \"inline\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-class\",\n          onClick: () => {\n            this.setState({\n              currentPage: 0\n            });\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-class\",\n          onClick: () => {\n            this.setState({\n              currentPage: this.state.currentPage - 1\n            });\n          },\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), pageNumber.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            listStyleType: \"none\",\n            display: \"inline\",\n            padding: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-class\",\n            onClick: () => {\n              this.setState({\n                currentPage: number\n              });\n            },\n            children: number + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-class\",\n          onClick: () => {\n            this.setState({\n              currentPage: this.state.currentPage + 1\n            });\n          },\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-class\",\n          onClick: () => {\n            this.setState({\n              currentPage: this.state.resResult.length / 10 - 1\n            });\n          },\n          children: \"end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleDelete(e, checkedList) {\n    if (this.state.selectAll) {\n      this.setState({\n        selectAll: !this.state.selectAll\n      });\n    }\n\n    let tempfiles = this.state.resResult;\n    let filter = [];\n    tempfiles.map(obj => {\n      if (!checkedList.includes(obj.id)) {\n        filter = [...filter, obj];\n      }\n    });\n    this.setState({\n      filerRes: filter\n    }, () => {\n      this.setState({\n        resResult: this.state.filerRes,\n        resP: this.state.filerRes\n      });\n    });\n    this.setState({\n      checkedList: []\n    });\n  }\n\n  handleAdd(e, checkedList) {\n    let tempfiles = this.state.resResult;\n    let filter = tempfiles;\n    filter = [...filter, {\n      email: \"aaa\",\n      name: \"op\",\n      id: \"00\",\n      role: \"op\"\n    }];\n    this.setState({\n      filerRes: filter\n    }, () => {\n      this.setState({\n        resResult: this.state.filerRes\n      });\n    });\n    this.setState({\n      checkedList: []\n    });\n  }\n\n  handleName(event, currentEdit) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleEmail(event, currentEdit) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleRole(event, currentEdit) {\n    this.setState({\n      role: event.target.value\n    });\n  }\n\n  handleEditSubmit(event, currentEdit) {\n    event.preventDefault();\n    this.state.resP.map((item, i) => {\n      if (item.id === currentEdit) {\n        let newArray = [...this.state.resP];\n        newArray[i] = { ...newArray[i],\n          name: this.state.name,\n          email: this.state.email,\n          role: this.state.role,\n          isChecked: false\n        };\n        this.setState({\n          resP: newArray,\n          resResult: newArray\n        }, () => {\n          this.setState({\n            checkedList: []\n          });\n        });\n      }\n    });\n  }\n\n  handleModal() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    let mypage = [...Array(5)].map((a, index) => {\n      let index1 = index * 10;\n      return this.state.resResult.slice(index1, index1 + 10);\n    });\n\n    if (this.state.resP.length === 0 && this.state.errMessage.length === 0) {\n      return this.showLoading();\n    }\n\n    if (this.state.resP.length === 0 && this.state.errMessage.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Some error : \", this.state.errMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"response-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => {\n                    this.handleSelectAll(e, this.state.checkedList, this.state.currentPage);\n                  },\n                  checked: this.state.selectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.resResult.slice(this.state.currentPage * 10, this.state.currentPage * 10 + 10).map((person, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: person.isChecked === true ? \"active-row\" : \"inactice-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: person.id,\n                  checked: person.isChecked,\n                  onChange: e => {\n                    this.handleCheck(person, e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: person.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: person.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: person.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), this.listofAllButtons(), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-class delete\",\n            onClick: e => {\n              this.handleDelete(e, this.state.checkedList);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-class delete\",\n            onClick: e => {\n              this.handleAdd(e, this.state.checkedList);\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-class edit\",\n            onClick: e => {\n              if (this.state.checkedList.length !== 0) {\n                let p = this.state.resResult.filter(row => row.id === this.state.checkedList[0]);\n                this.setState({\n                  name: p[0].name,\n                  email: p[0].email,\n                  role: p[0].role\n                });\n\n                if (this.state.checkedList.length !== 0) {\n                  this.setState({\n                    modal: !this.state.modal,\n                    currentID: this.state.checkedList[0]\n                  });\n                }\n              } else {\n                alert(\"nothing to edit\");\n              }\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(EditModal, {\n          resResult: this.state.resResult,\n          filerRes: this.state.filerRes,\n          handleModal: this.handleModal,\n          name: this.state.name,\n          modal: this.state.modal,\n          currID: this.state.currentID,\n          handleName: this.handleName,\n          handleEmail: this.handleEmail,\n          handleRole: this.handleRole,\n          handleEditSubmit: this.handleEditSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/faique/geektrust/Geek/src/App.js"],"names":["React","Component","axios","EditModal","Spinner","App","constructor","props","state","resP","resResult","errMessage","searchTerm","currentPage","filerRes","checkedList","currentID","email","role","name","modal","selectAll","updated","handleChange","bind","showLoading","handleModal","handleCheck","handleSelectAll","handleDelete","handleName","handleRole","handleEmail","handleEditSubmit","componentDidMount","url","get","then","response","setState","data","map","a","isChecked","localStorage","setItem","catch","error","message","search","rows","filter","row","toLowerCase","indexOf","id","event","target","value","tfile","item","e","console","log","currid","findIndex","element","newArray","checked","c_item","start","end","length","slice","index","prevState","listofAllButtons","pageNumber","i","push","display","number","listStyleType","padding","tempfiles","obj","includes","handleAdd","currentEdit","preventDefault","render","mypage","Array","index1","person","p","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport EditModal from \"./EditModal\";\nimport { Spinner } from \"reactstrap\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resP: [],\n      resResult: [],\n      errMessage: [],\n      searchTerm: \"\",\n      currentPage: 0,\n      filerRes: [],\n      checkedList: [],\n      currentID: null,\n      email: \"\",\n      role: \"\",\n      name: \"\",\n      modal: false,\n      selectAll: false,\n      updated: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showLoading = this.showLoading.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleSelectAll = this.handleSelectAll.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleName = this.handleName.bind(this);\n    this.handleRole = this.handleRole.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const url =\n      \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\n\n    axios\n      .get(url)\n      .then((response) => {\n        this.setState(\n          {\n            resResult: response.data.map((a) => {\n              return { ...a, isChecked: false };\n            }),\n          },\n          () => {\n            localStorage.setItem(\"resLoc\", this.state.resResult);\n            this.setState({\n              resP: this.state.resResult,\n            });\n          }\n        );\n      })\n      .catch((error) => {\n        this.setState({\n          errMessage: error.message,\n        });\n      });\n  }\n\n  search(rows) {\n    return rows.filter(\n      (row) =>\n        row.name.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) >\n          -1 ||\n        row.email.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) >\n          -1 ||\n        row.id.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) >\n          -1 ||\n        row.role.toLowerCase().indexOf(this.state.searchTerm.toLowerCase()) > -1\n    );\n  }\n\n  showLoading() {\n    return (\n      <Spinner className=\"loading\" size=\"\">\n        Loading...\n      </Spinner>\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ resResult: this.state.resP });\n    this.setState({ searchTerm: event.target.value }, () => {\n      let tfile = this.search(this.state.resResult);\n      this.setState({ resResult: tfile });\n    });\n  }\n\n  handleCheck(item, e) {\n    console.log(\"this\", e.target.name);\n    let currid = this.state.resResult.findIndex(\n      (element) => element.id === item.id\n    );\n\n    let newArray = [...this.state.resResult];\n    newArray[currid] = {\n      ...newArray[currid],\n      isChecked: !newArray[currid].isChecked,\n    };\n    this.setState({\n      resResult: newArray,\n    });\n\n    this.setState({\n      checkedList: [...this.state.checkedList, item.id],\n    });\n    if (e.target.checked) {\n      //true append id to checklist\n\n      if (this.state.checkedList.indexOf(this.state.checkedList[item]) === -1) {\n        this.setState({\n          checkedList: [...this.state.checkedList, item.id],\n        });\n      }\n    } else {\n      this.setState({\n        checkedList: this.state.checkedList.filter((c_item) => {\n          return c_item !== item.id;\n        }),\n      });\n    }\n  }\n\n  handleSelectAll(e, checkedList, currentPage) {\n    this.setState({ selectAll: !this.state.selectAll }, () => {\n      if (this.state.selectAll === false) {\n        this.setState({ checkedList: [] });\n      }\n    });\n    let start = currentPage * 10;\n    let end = 0;\n    this.state.resResult.length < 10\n      ? (end = this.state.resResult.length)\n      : (end = start + 10);\n\n    let newArray = [...this.state.resResult];\n\n    this.state.resResult.slice(start, end).map((item, index) => {\n      newArray[item.id - 1] = {\n        ...newArray[item.id - 1],\n        isChecked: !item.isChecked,\n      };\n\n      this.setState((prevState) => ({\n        checkedList: [...prevState.checkedList, item.id],\n      }));\n    });\n\n    this.setState({\n      resResult: newArray,\n    });\n  }\n\n  listofAllButtons() {\n    let pageNumber = [];\n    for (let i = 0; i < this.state.resResult.length / 10; i++) {\n      pageNumber.push(i);\n    }\n    return (\n      <nav>\n        <ul style={{ display: \"inline\" }}>\n          <button\n            className=\"btn-class\"\n            onClick={() => {\n              this.setState({ currentPage: 0 });\n            }}\n          >\n            Start\n          </button>\n          <button\n            className=\"btn-class\"\n            onClick={() => {\n              this.setState({ currentPage: this.state.currentPage - 1 });\n            }}\n          >\n            prev\n          </button>\n          {pageNumber.map((number) => (\n            <li\n              key={number}\n              style={{\n                listStyleType: \"none\",\n                display: \"inline\",\n                padding: \"5px\",\n              }}\n            >\n              <button\n                className=\"btn-class\"\n                onClick={() => {\n                  this.setState({ currentPage: number });\n                }}\n              >\n                {number + 1}\n              </button>\n            </li>\n          ))}\n          <button\n            className=\"btn-class\"\n            onClick={() => {\n              this.setState({ currentPage: this.state.currentPage + 1 });\n            }}\n          >\n            next\n          </button>\n          <button\n            className=\"btn-class\"\n            onClick={() => {\n              this.setState({\n                currentPage: this.state.resResult.length / 10 - 1,\n              });\n            }}\n          >\n            end\n          </button>\n        </ul>\n      </nav>\n    );\n  }\n\n  handleDelete(e, checkedList) {\n    if (this.state.selectAll) {\n      this.setState({\n        selectAll: !this.state.selectAll,\n      });\n    }\n    let tempfiles = this.state.resResult;\n    let filter = [];\n    tempfiles.map((obj) => {\n      if (!checkedList.includes(obj.id)) {\n        filter = [...filter, obj];\n      }\n    });\n    this.setState(\n      {\n        filerRes: filter,\n      },\n      () => {\n        this.setState({\n          resResult: this.state.filerRes,\n          resP: this.state.filerRes,\n        });\n      }\n    );\n    this.setState({\n      checkedList: [],\n    });\n  }\n\n  handleAdd(e, checkedList) {\n    let tempfiles = this.state.resResult;\n    let filter = tempfiles;\n    filter = [...filter, { email: \"aaa\", name: \"op\", id: \"00\", role: \"op\" }];\n\n    this.setState(\n      {\n        filerRes: filter,\n      },\n      () => {\n        this.setState({ resResult: this.state.filerRes });\n      }\n    );\n    this.setState({\n      checkedList: [],\n    });\n  }\n\n  handleName(event, currentEdit) {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n  handleEmail(event, currentEdit) {\n    this.setState({\n      email: event.target.value,\n    });\n  }\n  handleRole(event, currentEdit) {\n    this.setState({\n      role: event.target.value,\n    });\n  }\n  handleEditSubmit(event, currentEdit) {\n    event.preventDefault();\n    this.state.resP.map((item, i) => {\n      if (item.id === currentEdit) {\n        let newArray = [...this.state.resP];\n        newArray[i] = {\n          ...newArray[i],\n          name: this.state.name,\n          email: this.state.email,\n          role: this.state.role,\n          isChecked: false,\n        };\n        this.setState(\n          {\n            resP: newArray,\n            resResult: newArray,\n          },\n          () => {\n            this.setState({\n              checkedList: [],\n            });\n          }\n        );\n      }\n    });\n  }\n\n  handleModal() {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  }\n\n  render() {\n    let mypage = [...Array(5)].map((a, index) => {\n      let index1 = index * 10;\n      return this.state.resResult.slice(index1, index1 + 10);\n    });\n    if (this.state.resP.length === 0 && this.state.errMessage.length === 0) {\n      return this.showLoading();\n    }\n\n    if (this.state.resP.length === 0 && this.state.errMessage.length !== 0) {\n      return <div>Some error : {this.state.errMessage}</div>;\n    } else {\n      return (\n        <div className=\"app-container\">\n          <input placeholder=\"Search\" onChange={this.handleChange}></input>\n          <table className=\"response-table\">\n            <thead>\n              <tr>\n                <th>\n                  <input\n                    type=\"checkbox\"\n                    onChange={(e) => {\n                      this.handleSelectAll(\n                        e,\n                        this.state.checkedList,\n                        this.state.currentPage\n                      );\n                    }}\n                    checked={this.state.selectAll}\n                  ></input>\n                </th>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Role</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.resResult\n                .slice(\n                  this.state.currentPage * 10,\n                  this.state.currentPage * 10 + 10\n                )\n                .map((person, i) => (\n                  <tr\n                    key={i}\n                    className={\n                      person.isChecked === true ? \"active-row\" : \"inactice-row\"\n                    }\n                  >\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        name={person.id}\n                        checked={person.isChecked}\n                        onChange={(e) => {\n                          this.handleCheck(person, e);\n                        }}\n                      ></input>\n                    </td>\n                    <td>{person.id}</td>\n                    <td>{person.name}</td>\n                    <td>{person.email}</td>\n                    <td>{person.role}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n\n          {this.listofAllButtons()}\n          <div>\n            <button\n              className=\"btn-class delete\"\n              onClick={(e) => {\n                this.handleDelete(e, this.state.checkedList);\n              }}\n            >\n              Delete\n            </button>\n            <button\n              className=\"btn-class delete\"\n              onClick={(e) => {\n                this.handleAdd(e, this.state.checkedList);\n              }}\n            >\n              Add\n            </button>\n            <button\n              className=\"btn-class edit\"\n              onClick={(e) => {\n                if (this.state.checkedList.length !== 0) {\n                  let p = this.state.resResult.filter(\n                    (row) => row.id === this.state.checkedList[0]\n                  );\n\n                  this.setState({\n                    name: p[0].name,\n                    email: p[0].email,\n                    role: p[0].role,\n                  });\n                  if (this.state.checkedList.length !== 0) {\n                    this.setState({\n                      modal: !this.state.modal,\n                      currentID: this.state.checkedList[0],\n                    });\n                  }\n                } else {\n                  alert(\"nothing to edit\");\n                }\n              }}\n            >\n              Edit\n            </button>\n          </div>\n          {this.state.modal ? (\n            <EditModal\n              resResult={this.state.resResult}\n              filerRes={this.state.filerRes}\n              handleModal={this.handleModal}\n              name={this.state.name}\n              modal={this.state.modal}\n              currID={this.state.currentID}\n              handleName={this.handleName}\n              handleEmail={this.handleEmail}\n              handleRole={this.handleRole}\n              handleEditSubmit={this.handleEditSubmit}\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}